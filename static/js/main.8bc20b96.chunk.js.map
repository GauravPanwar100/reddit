{"version":3,"sources":["components/posts/Posts.js","Demo.js","components/pagination/Pagination.js","components/main-bar/MainBar.js","components/content/Content.js","components/home/Home.js","components/subredditPage/Subreddit.js","App.js","index.js"],"names":["Posts","posts","loading","history","fetchMoreData","hasMore","fetchPost","initialLimit","useHistory","className","id","map","post","index","xmlns","width","height","fill","viewBox","fillRule","d","data","ups","author","num_crossposts","onClick","e","postData","console","log","permalink","url","push","detail","title","image_src","src","description","num_comments","length","Component","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","number","href","tabIndex","MainBar","useState","setposts","setInitialLimit","setLoading","after","setAfter","activeTab","setActiveTab","setCurrentPage","useEffect","page","a","axios","get","res","status","setTimeout","children","indexOfLastPost","indexOfFirstPost","currentPosts","slice","pageNumber","Content","Home","Subreddit","props","location","state","subRedditData","thumbnail","selftext","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc20b96.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate, useHistory } from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport \"./Posts.css\";\r\n\r\n\r\nexport default function Posts({ posts, loading, fetchMoreData, hasMore, fetchPost, initialLimit }) {\r\n\r\n    // const navigate = useNavigate();\r\n    const history = useHistory();\r\n\r\n    const handleClick = (e, postData) => {\r\n        console.log(postData,\"postData>>\",postData.data.permalink, \"histro>>\", postData.data.url,\">>>>>\",history)\r\n\r\n        history.push(`/subreddit${postData.data.permalink}`, {detail: postData.data})\r\n    }\r\n\r\n    // const handleScroll = () => {console.log(\"qwerty\")\r\n    //     const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n    //     const body = document.body;\r\n    //     const html = document.documentElement;\r\n    //     const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n    //     const windowBottom = windowHeight + window.pageYOffset;\r\n    //     if (windowBottom >= docHeight) {\r\n    //         console.log(\"boottom\")\r\n    //         initialLimit();\r\n    //         fetchPost();\r\n    //     } else {\r\n    //         console.log(\"not bottom\")\r\n    //     }\r\n    // }\r\n\r\n//    useEffect(() => {\r\n       \r\n//     window.addEventListener(\"scroll\", handleScroll);\r\n\r\n//        return () => {\r\n//         window.removeEventListener(\"scroll\", handleScroll);\r\n//        }\r\n//    }, [window]);\r\n\r\n  return (\r\n    <div className=\"posts-wrapper\" id=\"scrollableDiv\">\r\n        {/* <InfiniteScroll\r\n            dataLength={posts.length}\r\n            next={fetchMoreData}\r\n            hasMore={hasMore}\r\n            loader={<h4>Loading...</h4>}\r\n            scrollableTarget=\"scrollableDiv\"\r\n        > */}\r\n        {loading && <h4>Loading....</h4>}\r\n      {!loading && posts && posts.map((post, index) => (\r\n          <>\r\n        <div className=\"post\" key={index}>\r\n          <div className=\"post-sidebar\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-arrow-up\" viewBox=\"0 0 16 16\">\r\n                <path fillRule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\r\n            </svg>\r\n            <span>{post.data.ups}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-arrow-down downvote\" viewBox=\"0 0 16 16\">\r\n                <path fillRule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\r\n            </svg>\r\n          </div>\r\n          <div className=\"post-title\">\r\n            {/* <img src={post.subreddit.image_src} /> */}\r\n            {/* <span className=\"subreddit-name\">r/{post.subreddit.name}</span> */}\r\n            <span className=\"post-user\">Posted by</span>\r\n            <span className=\"post-user underline\">u/{post.data.author}</span>\r\n            <span className=\"post-user\">{post.data.num_crossposts} years ago</span>\r\n            <div className=\"spacer\"></div>\r\n            {/* <Button label=\"+ JOIN\" /> */}\r\n          </div>\r\n          <div className=\"post-body\">\r\n              {/* <Link to={`/subreddit/${post.data.permalink}`}>{post.data.title}</Link> */}\r\n            <span className=\"title\" onClick={(e) => handleClick(e, post)}>{post.data.title}</span>\r\n            {/* {post.video_src && <Video src={post.video_src} duration={post.duration} />} */}\r\n            {post.image_src && <img src={post.image_src} />}\r\n            {post.description && <span className=\"description\">{post.description}</span>}\r\n          </div>\r\n          <div className=\"post-footer\">\r\n            <div className=\"comments footer-action\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-chat-square\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2.5a2 2 0 0 0-1.6.8L8 14.333 6.1 11.8a2 2 0 0 0-1.6-.8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2.5a1 1 0 0 1 .8.4l1.9 2.533a1 1 0 0 0 1.6 0l1.9-2.533a1 1 0 0 1 .8-.4H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n            </svg>\r\n              <span>{post.data.num_comments} Comments</span>\r\n            </div>\r\n            <div className=\"share footer-action\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-share-fill\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5z\"/>\r\n            </svg>\r\n              <span>Share</span>\r\n            </div>\r\n            <div className=\"save footer-action\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bookmark\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\r\n            </svg>\r\n              <span>Save</span>\r\n            </div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        </>\r\n      ))}\r\n      {!loading && posts.length === 0 && <h4>No Post Found</h4>}\r\n    {/* </InfiniteScroll> */}\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react'\r\nimport Posts from './components/posts/Posts';\r\nimport axios from 'axios'\r\n\r\nexport class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            message: 'not at bottom',\r\n            hasMore: true,\r\n            posts: [],\r\n            initialLimit: 10\r\n        };\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n    handleScroll() {\r\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n        const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n        const windowBottom = windowHeight + window.pageYOffset;\r\n        if (windowBottom >= docHeight) {console.log(\"ifff\")\r\n        this.setState({ initialLimit: this.state.initialLimit + 10 });\r\n        this.fetchPost();\r\n            \r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.fetchPost();\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    fetchPost = async (page) => {\r\n        let res;\r\n        if (page === 'hot') {\r\n            res = await axios.get(`https://www.reddit.com/r/gifs/hot.json?limit=${this.state.initialLimit}`);\r\n            // setActiveTab('hot');\r\n        } else if (page === 'new') {\r\n            res = await axios.get(`https://www.reddit.com/r/gifs/new.json?limit=${this.state.initialLimit}`);\r\n            // setActiveTab('new');\r\n        } else if (page === 'top') {\r\n            res = await axios.get(`https://www.reddit.com/r/gifs/top.json?limit=${this.state.initialLimit}`);\r\n            // setActiveTab('top');\r\n        } else {\r\n            res = await axios.get(`https://www.reddit.com/r/gifs.json?limit=${this.state.initialLimit}`);\r\n            // setActiveTab('hot');\r\n            \r\n        }\r\n\r\n        if (res && res.status === 200) {\r\n            // setTotalPosts(res.data.data.children);\r\n            // setposts(res.data.data.children);\r\n            this.setState({ posts: res.data.data.children})\r\n        }\r\n        console.log(\"res>>\",res)\r\n    }\r\n\r\n    fetchMoreData = () => {\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        console.log(\"gggg\",this.state.posts.length)\r\n        if (this.state.posts.length > 100) {\r\n            // setHasMore(false);\r\n            return;\r\n        }\r\n        // setInitialLimit(initialLimit + 10);\r\n        // fetchPost(activeTab);\r\n        // let postBreak = [];\r\n        // postBreak.push(posts.slice(0,10))\r\n        // setTimeout(() => {\r\n        //     if (posts.length <= totalPosts.length) {\r\n        //         setposts(posts.concat(totalPosts.slice(totalPosts.length-posts.length, 10)));\r\n        //         setHasMore(true);\r\n        //         return;\r\n        //     }\r\n        //     setHasMore(false);\r\n        // }, 1500);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Posts posts={this.state.posts} fetchMoreData={this.fetchMoreData} hasMore={this.state.hasMore} initialLimit={this.state.initialLimit + 10}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo\r\n","import React from \"react\";\r\n\r\nfunction Pagination({ postsPerPage, totalPosts, paginate, currentPage }) {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n      {pageNumbers.map(number => (\r\n        <li className={currentPage === number ? \"page-item active\" : \"page-item\"} key={number}>\r\n          <a onClick={() => paginate(number)} className=\"page-link\" href=\"#\" tabIndex=\"-1\">\r\n            {number}\r\n          </a>\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Whatshot from \"@material-ui/icons/Whatshot\";\r\nimport NewReleases from \"@material-ui/icons/NewReleases\";\r\nimport TrendingUp from \"@material-ui/icons/TrendingUp\";\r\nimport Menu from \"@material-ui/icons/Menu\";\r\nimport MoreHoriz from \"@material-ui/icons/MoreHoriz\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nimport \"./MainBar.css\";\r\nimport Posts from \"../posts/Posts\";\r\nimport Demo from \"../../Demo\";\r\nimport Pagination from \"../pagination/Pagination\";\r\n\r\nexport default function MainBar() {\r\n    const [posts, setposts] = useState([]);\r\n    const [initialLimit, setInitialLimit] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n    const [after, setAfter] = useState('');\r\n    const [activeTab, setActiveTab] = useState('hot');\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n    }, []);\r\n\r\n    const fetchPost = async (page) => {\r\n        let res;\r\n        if (page === 'hot') {\r\n            let url = `https://www.reddit.com/r/gifs/hot.json?limit=${initialLimit}`;\r\n            url = url + (after !== '' ? `&&after=${after}` : '');\r\n            res = await axios.get(url);\r\n            setActiveTab('hot');\r\n            setLoading(true);\r\n        } else if (page === 'new') {\r\n            let url = 'https://www.reddit.com/r/gifs/new.json?limit=' + initialLimit;\r\n            url = url + (after !== '' ? `&&after=${after}` : '');\r\n            console.log(url)\r\n            res = await axios.get(url);\r\n            setActiveTab('new');\r\n            setLoading(true);\r\n        } else if (page === 'top') {\r\n            let url = `https://www.reddit.com/r/gifs/top.json?limit=${initialLimit}`;\r\n            url = url + (after !== '' ? `&&after=${after}` : '');\r\n            res = await axios.get(url);\r\n            setActiveTab('top');\r\n            setLoading(true);\r\n        } else {\r\n            res = await axios.get(`https://www.reddit.com/r/gifs.json?limit=${initialLimit}`);\r\n            setActiveTab('hot');\r\n            setLoading(true);\r\n        }\r\n\r\n        if (res && res.status === 200) {\r\n            // setTotalPosts(res.data.data.children);\r\n            \r\n            setTimeout(() => {\r\n                setLoading(false); \r\n                setposts(res.data.data.children)\r\n            }, 1000);\r\n            \r\n\r\n            if (activeTab === 'hot') {\r\n\r\n            }\r\n            setAfter(res.data.data.after);\r\n        }\r\n        console.log(\"res>>\",res,\"afetr\",after)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change Page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n      <>\r\n    <div className=\"main-bar\">\r\n      {/* <div className=\"update-card\">\r\n        <div className=\"top-section\">\r\n          <span>UPDATES FROM REDDIT</span>\r\n          <CloseIcon className=\"hoverable\" />\r\n        </div>\r\n        <div className=\"body hoverable\">\r\n          <div className=\"context\">\r\n            <span className=\"title\">Keep yourself safe and informed</span>\r\n            <br />\r\n            <span className=\"description\">Visit r/Coronavirus to talk about COVID-19, and visit www.who.int for more information.</span>\r\n          </div>\r\n          <img src=\"./assets/images/pin.jpg\" />\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"filter-container\">\r\n        <div className={activeTab === 'hot' ? \"filter-element hoverable\": \"filter-element-secondary hoverable\"} onClick={() => fetchPost('hot')}>\r\n          <Whatshot />\r\n          <span>Hot</span>\r\n        </div>\r\n        {/* <div className=\"filter-element hoverable\">\r\n          <span>Everywhere</span>\r\n          <ArrowDropDown />\r\n        </div> */}\r\n        <div className={activeTab === 'new' ? \"filter-element hoverable\": \"filter-element-secondary hoverable\"} onClick={() => fetchPost('new')}>\r\n          <NewReleases />\r\n          <span>New</span>\r\n        </div>\r\n        <div className={activeTab === 'top' ? \"filter-element hoverable\": \"filter-element-secondary hoverable\"} onClick={() => fetchPost('top')}>\r\n          <TrendingUp />\r\n          <span>Top</span>\r\n        </div>\r\n        <MoreHoriz className=\"filter-element-tertiary hoverable\" />\r\n        <div className=\"spacer\"></div>\r\n        <div className=\"filter-element-menu hoverable\">\r\n          <Menu />\r\n          <ArrowDropDown />\r\n        </div>\r\n      </div>\r\n\r\n      <Posts posts={currentPosts} loading={loading} /*fetchMoreData={fetchMoreData()}*/ hasMore={hasMore} fetchPost={fetchPost} initialLimit={() => setInitialLimit(initialLimit + 10)}/>\r\n      {/* <Demo /> */}\r\n      <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} currentPage={currentPage} />\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"./Content.css\";\r\n// import TrendingToday from \"./trending-today/TrendingToday\";\r\nimport MainBar from \"../main-bar/MainBar\";\r\n// import SideBar from \"./side-bar/SideBar\";\r\n\r\nexport default function Content() {\r\n  return (\r\n    <div className=\"content\">\r\n      {/* <TrendingToday /> */}\r\n      <div className=\"bars-wrapper\">\r\n        <span className=\"popular-posts-title\">Popular posts</span>\r\n        <div className=\"bars-wrapper-inside\">\r\n          <MainBar />\r\n          {/* <SideBar /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n// import Navbar from \"../navbar/Navbar\";\r\nimport Content from \"../content/Content\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      {/* <Navbar /> */}\r\n      <Content/>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Subreddit.css';\r\n\r\nfunction Subreddit(props) {\r\n    const history = useHistory();\r\n    console.log(\"props>>\",props, \">>>\",history)\r\n    console.log(\"<><><>\",history.location.state.detail)\r\n    const subRedditData = history.location.state.detail;\r\n    return (\r\n        <div className=\"posts-wrapper\">\r\n      \r\n        <div className=\"post\">\r\n          <div className=\"post-sidebar\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-arrow-up\" viewBox=\"0 0 16 16\">\r\n                <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\r\n            </svg>\r\n            <span>{subRedditData.ups}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-arrow-down downvote\" viewBox=\"0 0 16 16\">\r\n                <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\r\n            </svg>\r\n          </div>\r\n          <div className=\"post-title\">\r\n            {/* <img src={post.subreddit.image_src} /> */}\r\n            {/* <span className=\"subreddit-name\">r/{post.subreddit.name}</span> */}\r\n            <span className=\"post-user\">Posted by</span>\r\n            <span className=\"post-user underline\">u/{subRedditData.author}</span>\r\n            <span className=\"post-user\">{subRedditData.num_crossposts} years ago</span>\r\n          </div>\r\n          <div className=\"post-body\">\r\n            <span className=\"title\">{subRedditData.title}</span>\r\n            {/* {post.video_src && <Video src={post.video_src} duration={post.duration} />} */}\r\n            {subRedditData.thumbnail && <img src={subRedditData.thumbnail} />}\r\n            {subRedditData.selftext && <span className=\"description\">{subRedditData.selftext}</span>}\r\n          </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Subreddit;\r\n","import {\n  BrowserRouter as Router, Switch, Route, Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from './components/home/Home';\nimport Subreddit from \"./components/subredditPage/Subreddit\";\nimport Demo from \"./Demo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route exact path=\"/\">\n                <Home/>\n                {/* <Demo /> */}\n            </Route>\n            <Route path=\"/subreddit\">\n                <Subreddit/>\n            </Route>\n            {/* <Route path=\"/\">\n                <Demo/>\n            </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}